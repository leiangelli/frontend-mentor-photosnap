@function stroke($stroke, $color) {
  $shadow: ();
  $from: $stroke * -1;

  @for $i from $from through $stroke {
    @for $j from $from through $stroke {
      $shadow: append($shadow, $i * 1px $j * 1px 0 $color, comma);
    }
  }

  @return $shadow;
}

/**
 * simulates javascripts string.split(',')
 */
@function str-split($string, $separator) {
  $split-arr: ();
  $index: str-index($string, $separator);

  @while $index !=null {
    $item: str-slice($string, 1, $index - 1);
    $split-arr: append($split-arr, $item);
    $string: str-slice($string, $index + 1);
    $index: str-index($string, $separator);
  }

  $split-arr: append($split-arr, $string);

  @return $split-arr;
}

/**
 * simulates string.replace(',', '')
 */
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }

  @return $string;
}

/**
 * simulates [...array].includes('string') 
 */
@function str-contains($list, $var) {
  @return (type-of(index($list, $var)) != 'null');
}
